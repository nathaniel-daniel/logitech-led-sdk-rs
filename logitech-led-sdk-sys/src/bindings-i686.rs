/* automatically generated by rust-bindgen 0.65.1 */

pub const LOGI_LED_BITMAP_WIDTH: u32 = 21;
pub const LOGI_LED_BITMAP_HEIGHT: u32 = 6;
pub const LOGI_LED_BITMAP_BYTES_PER_KEY: u32 = 4;
pub const LOGI_LED_BITMAP_SIZE: u32 = 504;
pub const LOGI_LED_DURATION_INFINITE: u32 = 0;
pub const LOGI_DEVICETYPE_MONOCHROME_ORD: u32 = 0;
pub const LOGI_DEVICETYPE_RGB_ORD: u32 = 1;
pub const LOGI_DEVICETYPE_PERKEY_RGB_ORD: u32 = 2;
pub const LOGI_DEVICETYPE_MONOCHROME: u32 = 1;
pub const LOGI_DEVICETYPE_RGB: u32 = 2;
pub const LOGI_DEVICETYPE_PERKEY_RGB: u32 = 4;
pub const LOGI_DEVICETYPE_ALL: u32 = 7;
impl LogiLed_KeyName {
    pub const ESC: LogiLed_KeyName = LogiLed_KeyName(1);
}
impl LogiLed_KeyName {
    pub const F1: LogiLed_KeyName = LogiLed_KeyName(59);
}
impl LogiLed_KeyName {
    pub const F2: LogiLed_KeyName = LogiLed_KeyName(60);
}
impl LogiLed_KeyName {
    pub const F3: LogiLed_KeyName = LogiLed_KeyName(61);
}
impl LogiLed_KeyName {
    pub const F4: LogiLed_KeyName = LogiLed_KeyName(62);
}
impl LogiLed_KeyName {
    pub const F5: LogiLed_KeyName = LogiLed_KeyName(63);
}
impl LogiLed_KeyName {
    pub const F6: LogiLed_KeyName = LogiLed_KeyName(64);
}
impl LogiLed_KeyName {
    pub const F7: LogiLed_KeyName = LogiLed_KeyName(65);
}
impl LogiLed_KeyName {
    pub const F8: LogiLed_KeyName = LogiLed_KeyName(66);
}
impl LogiLed_KeyName {
    pub const F9: LogiLed_KeyName = LogiLed_KeyName(67);
}
impl LogiLed_KeyName {
    pub const F10: LogiLed_KeyName = LogiLed_KeyName(68);
}
impl LogiLed_KeyName {
    pub const F11: LogiLed_KeyName = LogiLed_KeyName(87);
}
impl LogiLed_KeyName {
    pub const F12: LogiLed_KeyName = LogiLed_KeyName(88);
}
impl LogiLed_KeyName {
    pub const PRINT_SCREEN: LogiLed_KeyName = LogiLed_KeyName(311);
}
impl LogiLed_KeyName {
    pub const SCROLL_LOCK: LogiLed_KeyName = LogiLed_KeyName(70);
}
impl LogiLed_KeyName {
    pub const PAUSE_BREAK: LogiLed_KeyName = LogiLed_KeyName(325);
}
impl LogiLed_KeyName {
    pub const TILDE: LogiLed_KeyName = LogiLed_KeyName(41);
}
impl LogiLed_KeyName {
    pub const ONE: LogiLed_KeyName = LogiLed_KeyName(2);
}
impl LogiLed_KeyName {
    pub const TWO: LogiLed_KeyName = LogiLed_KeyName(3);
}
impl LogiLed_KeyName {
    pub const THREE: LogiLed_KeyName = LogiLed_KeyName(4);
}
impl LogiLed_KeyName {
    pub const FOUR: LogiLed_KeyName = LogiLed_KeyName(5);
}
impl LogiLed_KeyName {
    pub const FIVE: LogiLed_KeyName = LogiLed_KeyName(6);
}
impl LogiLed_KeyName {
    pub const SIX: LogiLed_KeyName = LogiLed_KeyName(7);
}
impl LogiLed_KeyName {
    pub const SEVEN: LogiLed_KeyName = LogiLed_KeyName(8);
}
impl LogiLed_KeyName {
    pub const EIGHT: LogiLed_KeyName = LogiLed_KeyName(9);
}
impl LogiLed_KeyName {
    pub const NINE: LogiLed_KeyName = LogiLed_KeyName(10);
}
impl LogiLed_KeyName {
    pub const ZERO: LogiLed_KeyName = LogiLed_KeyName(11);
}
impl LogiLed_KeyName {
    pub const MINUS: LogiLed_KeyName = LogiLed_KeyName(12);
}
impl LogiLed_KeyName {
    pub const EQUALS: LogiLed_KeyName = LogiLed_KeyName(13);
}
impl LogiLed_KeyName {
    pub const BACKSPACE: LogiLed_KeyName = LogiLed_KeyName(14);
}
impl LogiLed_KeyName {
    pub const INSERT: LogiLed_KeyName = LogiLed_KeyName(338);
}
impl LogiLed_KeyName {
    pub const HOME: LogiLed_KeyName = LogiLed_KeyName(327);
}
impl LogiLed_KeyName {
    pub const PAGE_UP: LogiLed_KeyName = LogiLed_KeyName(329);
}
impl LogiLed_KeyName {
    pub const NUM_LOCK: LogiLed_KeyName = LogiLed_KeyName(69);
}
impl LogiLed_KeyName {
    pub const NUM_SLASH: LogiLed_KeyName = LogiLed_KeyName(309);
}
impl LogiLed_KeyName {
    pub const NUM_ASTERISK: LogiLed_KeyName = LogiLed_KeyName(55);
}
impl LogiLed_KeyName {
    pub const NUM_MINUS: LogiLed_KeyName = LogiLed_KeyName(74);
}
impl LogiLed_KeyName {
    pub const TAB: LogiLed_KeyName = LogiLed_KeyName(15);
}
impl LogiLed_KeyName {
    pub const Q: LogiLed_KeyName = LogiLed_KeyName(16);
}
impl LogiLed_KeyName {
    pub const W: LogiLed_KeyName = LogiLed_KeyName(17);
}
impl LogiLed_KeyName {
    pub const E: LogiLed_KeyName = LogiLed_KeyName(18);
}
impl LogiLed_KeyName {
    pub const R: LogiLed_KeyName = LogiLed_KeyName(19);
}
impl LogiLed_KeyName {
    pub const T: LogiLed_KeyName = LogiLed_KeyName(20);
}
impl LogiLed_KeyName {
    pub const Y: LogiLed_KeyName = LogiLed_KeyName(21);
}
impl LogiLed_KeyName {
    pub const U: LogiLed_KeyName = LogiLed_KeyName(22);
}
impl LogiLed_KeyName {
    pub const I: LogiLed_KeyName = LogiLed_KeyName(23);
}
impl LogiLed_KeyName {
    pub const O: LogiLed_KeyName = LogiLed_KeyName(24);
}
impl LogiLed_KeyName {
    pub const P: LogiLed_KeyName = LogiLed_KeyName(25);
}
impl LogiLed_KeyName {
    pub const OPEN_BRACKET: LogiLed_KeyName = LogiLed_KeyName(26);
}
impl LogiLed_KeyName {
    pub const CLOSE_BRACKET: LogiLed_KeyName = LogiLed_KeyName(27);
}
impl LogiLed_KeyName {
    pub const BACKSLASH: LogiLed_KeyName = LogiLed_KeyName(43);
}
impl LogiLed_KeyName {
    pub const KEYBOARD_DELETE: LogiLed_KeyName = LogiLed_KeyName(339);
}
impl LogiLed_KeyName {
    pub const END: LogiLed_KeyName = LogiLed_KeyName(335);
}
impl LogiLed_KeyName {
    pub const PAGE_DOWN: LogiLed_KeyName = LogiLed_KeyName(337);
}
impl LogiLed_KeyName {
    pub const NUM_SEVEN: LogiLed_KeyName = LogiLed_KeyName(71);
}
impl LogiLed_KeyName {
    pub const NUM_EIGHT: LogiLed_KeyName = LogiLed_KeyName(72);
}
impl LogiLed_KeyName {
    pub const NUM_NINE: LogiLed_KeyName = LogiLed_KeyName(73);
}
impl LogiLed_KeyName {
    pub const NUM_PLUS: LogiLed_KeyName = LogiLed_KeyName(78);
}
impl LogiLed_KeyName {
    pub const CAPS_LOCK: LogiLed_KeyName = LogiLed_KeyName(58);
}
impl LogiLed_KeyName {
    pub const A: LogiLed_KeyName = LogiLed_KeyName(30);
}
impl LogiLed_KeyName {
    pub const S: LogiLed_KeyName = LogiLed_KeyName(31);
}
impl LogiLed_KeyName {
    pub const D: LogiLed_KeyName = LogiLed_KeyName(32);
}
impl LogiLed_KeyName {
    pub const F: LogiLed_KeyName = LogiLed_KeyName(33);
}
impl LogiLed_KeyName {
    pub const G: LogiLed_KeyName = LogiLed_KeyName(34);
}
impl LogiLed_KeyName {
    pub const H: LogiLed_KeyName = LogiLed_KeyName(35);
}
impl LogiLed_KeyName {
    pub const J: LogiLed_KeyName = LogiLed_KeyName(36);
}
impl LogiLed_KeyName {
    pub const K: LogiLed_KeyName = LogiLed_KeyName(37);
}
impl LogiLed_KeyName {
    pub const L: LogiLed_KeyName = LogiLed_KeyName(38);
}
impl LogiLed_KeyName {
    pub const SEMICOLON: LogiLed_KeyName = LogiLed_KeyName(39);
}
impl LogiLed_KeyName {
    pub const APOSTROPHE: LogiLed_KeyName = LogiLed_KeyName(40);
}
impl LogiLed_KeyName {
    pub const ENTER: LogiLed_KeyName = LogiLed_KeyName(28);
}
impl LogiLed_KeyName {
    pub const NUM_FOUR: LogiLed_KeyName = LogiLed_KeyName(75);
}
impl LogiLed_KeyName {
    pub const NUM_FIVE: LogiLed_KeyName = LogiLed_KeyName(76);
}
impl LogiLed_KeyName {
    pub const NUM_SIX: LogiLed_KeyName = LogiLed_KeyName(77);
}
impl LogiLed_KeyName {
    pub const LEFT_SHIFT: LogiLed_KeyName = LogiLed_KeyName(42);
}
impl LogiLed_KeyName {
    pub const Z: LogiLed_KeyName = LogiLed_KeyName(44);
}
impl LogiLed_KeyName {
    pub const X: LogiLed_KeyName = LogiLed_KeyName(45);
}
impl LogiLed_KeyName {
    pub const C: LogiLed_KeyName = LogiLed_KeyName(46);
}
impl LogiLed_KeyName {
    pub const V: LogiLed_KeyName = LogiLed_KeyName(47);
}
impl LogiLed_KeyName {
    pub const B: LogiLed_KeyName = LogiLed_KeyName(48);
}
impl LogiLed_KeyName {
    pub const N: LogiLed_KeyName = LogiLed_KeyName(49);
}
impl LogiLed_KeyName {
    pub const M: LogiLed_KeyName = LogiLed_KeyName(50);
}
impl LogiLed_KeyName {
    pub const COMMA: LogiLed_KeyName = LogiLed_KeyName(51);
}
impl LogiLed_KeyName {
    pub const PERIOD: LogiLed_KeyName = LogiLed_KeyName(52);
}
impl LogiLed_KeyName {
    pub const FORWARD_SLASH: LogiLed_KeyName = LogiLed_KeyName(53);
}
impl LogiLed_KeyName {
    pub const RIGHT_SHIFT: LogiLed_KeyName = LogiLed_KeyName(54);
}
impl LogiLed_KeyName {
    pub const ARROW_UP: LogiLed_KeyName = LogiLed_KeyName(328);
}
impl LogiLed_KeyName {
    pub const NUM_ONE: LogiLed_KeyName = LogiLed_KeyName(79);
}
impl LogiLed_KeyName {
    pub const NUM_TWO: LogiLed_KeyName = LogiLed_KeyName(80);
}
impl LogiLed_KeyName {
    pub const NUM_THREE: LogiLed_KeyName = LogiLed_KeyName(81);
}
impl LogiLed_KeyName {
    pub const NUM_ENTER: LogiLed_KeyName = LogiLed_KeyName(284);
}
impl LogiLed_KeyName {
    pub const LEFT_CONTROL: LogiLed_KeyName = LogiLed_KeyName(29);
}
impl LogiLed_KeyName {
    pub const LEFT_WINDOWS: LogiLed_KeyName = LogiLed_KeyName(347);
}
impl LogiLed_KeyName {
    pub const LEFT_ALT: LogiLed_KeyName = LogiLed_KeyName(56);
}
impl LogiLed_KeyName {
    pub const SPACE: LogiLed_KeyName = LogiLed_KeyName(57);
}
impl LogiLed_KeyName {
    pub const RIGHT_ALT: LogiLed_KeyName = LogiLed_KeyName(312);
}
impl LogiLed_KeyName {
    pub const RIGHT_WINDOWS: LogiLed_KeyName = LogiLed_KeyName(348);
}
impl LogiLed_KeyName {
    pub const APPLICATION_SELECT: LogiLed_KeyName = LogiLed_KeyName(349);
}
impl LogiLed_KeyName {
    pub const RIGHT_CONTROL: LogiLed_KeyName = LogiLed_KeyName(285);
}
impl LogiLed_KeyName {
    pub const ARROW_LEFT: LogiLed_KeyName = LogiLed_KeyName(331);
}
impl LogiLed_KeyName {
    pub const ARROW_DOWN: LogiLed_KeyName = LogiLed_KeyName(336);
}
impl LogiLed_KeyName {
    pub const ARROW_RIGHT: LogiLed_KeyName = LogiLed_KeyName(333);
}
impl LogiLed_KeyName {
    pub const NUM_ZERO: LogiLed_KeyName = LogiLed_KeyName(82);
}
impl LogiLed_KeyName {
    pub const NUM_PERIOD: LogiLed_KeyName = LogiLed_KeyName(83);
}
impl LogiLed_KeyName {
    pub const G_1: LogiLed_KeyName = LogiLed_KeyName(65521);
}
impl LogiLed_KeyName {
    pub const G_2: LogiLed_KeyName = LogiLed_KeyName(65522);
}
impl LogiLed_KeyName {
    pub const G_3: LogiLed_KeyName = LogiLed_KeyName(65523);
}
impl LogiLed_KeyName {
    pub const G_4: LogiLed_KeyName = LogiLed_KeyName(65524);
}
impl LogiLed_KeyName {
    pub const G_5: LogiLed_KeyName = LogiLed_KeyName(65525);
}
impl LogiLed_KeyName {
    pub const G_6: LogiLed_KeyName = LogiLed_KeyName(65526);
}
impl LogiLed_KeyName {
    pub const G_7: LogiLed_KeyName = LogiLed_KeyName(65527);
}
impl LogiLed_KeyName {
    pub const G_8: LogiLed_KeyName = LogiLed_KeyName(65528);
}
impl LogiLed_KeyName {
    pub const G_9: LogiLed_KeyName = LogiLed_KeyName(65529);
}
impl LogiLed_KeyName {
    pub const G_LOGO: LogiLed_KeyName = LogiLed_KeyName(1048561);
}
impl LogiLed_KeyName {
    pub const G_BADGE: LogiLed_KeyName = LogiLed_KeyName(1048562);
}
#[repr(transparent)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct LogiLed_KeyName(pub ::std::os::raw::c_int);
impl LogiLed_DeviceType {
    pub const Keyboard: LogiLed_DeviceType = LogiLed_DeviceType(0);
}
impl LogiLed_DeviceType {
    pub const Mouse: LogiLed_DeviceType = LogiLed_DeviceType(3);
}
impl LogiLed_DeviceType {
    pub const Mousemat: LogiLed_DeviceType = LogiLed_DeviceType(4);
}
impl LogiLed_DeviceType {
    pub const Headset: LogiLed_DeviceType = LogiLed_DeviceType(8);
}
impl LogiLed_DeviceType {
    pub const Speaker: LogiLed_DeviceType = LogiLed_DeviceType(14);
}
#[repr(transparent)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct LogiLed_DeviceType(pub ::std::os::raw::c_int);
extern "C" {
    #[link_name = "\u{1}?LogiLedInit@@YA_NXZ"]
    pub fn LogiLedInit() -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedInitWithName@@YA_NQBD@Z"]
    pub fn LogiLedInitWithName(name: *const ::std::os::raw::c_char) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetSdkVersion@@YA_NPAH00@Z"]
    pub fn LogiLedGetSdkVersion(
        majorNum: *mut ::std::os::raw::c_int,
        minorNum: *mut ::std::os::raw::c_int,
        buildNum: *mut ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetConfigOptionNumber@@YA_NPB_WPAN@Z"]
    pub fn LogiLedGetConfigOptionNumber(configPath: *const u16, defaultValue: *mut f64) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetConfigOptionBool@@YA_NPB_WPA_N@Z"]
    pub fn LogiLedGetConfigOptionBool(configPath: *const u16, defaultValue: *mut bool) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetConfigOptionColor@@YA_NPB_WPAH11@Z"]
    pub fn LogiLedGetConfigOptionColor(
        configPath: *const u16,
        defaultRed: *mut ::std::os::raw::c_int,
        defaultGreen: *mut ::std::os::raw::c_int,
        defaultBlue: *mut ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetConfigOptionRect@@YA_NPB_WPAH111@Z"]
    pub fn LogiLedGetConfigOptionRect(
        configPath: *const u16,
        defaultX: *mut ::std::os::raw::c_int,
        defaultY: *mut ::std::os::raw::c_int,
        defaultWidth: *mut ::std::os::raw::c_int,
        defaultHeight: *mut ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetConfigOptionString@@YA_NPB_WPA_WH@Z"]
    pub fn LogiLedGetConfigOptionString(
        configPath: *const u16,
        defaultValue: *mut u16,
        bufferSize: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetConfigOptionKeyInput@@YA_NPB_WPA_WH@Z"]
    pub fn LogiLedGetConfigOptionKeyInput(
        configPath: *const u16,
        defaultValue: *mut u16,
        bufferSize: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetConfigOptionSelect@@YA_NPB_WPA_WPAH0H@Z"]
    pub fn LogiLedGetConfigOptionSelect(
        configPath: *const u16,
        defaultValue: *mut u16,
        valueSize: *mut ::std::os::raw::c_int,
        values: *const u16,
        bufferSize: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedGetConfigOptionRange@@YA_NPB_WPAHHH@Z"]
    pub fn LogiLedGetConfigOptionRange(
        configPath: *const u16,
        defaultValue: *mut ::std::os::raw::c_int,
        min: ::std::os::raw::c_int,
        max: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetConfigOptionLabel@@YA_NPB_WPA_W@Z"]
    pub fn LogiLedSetConfigOptionLabel(configPath: *const u16, label: *mut u16) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetTargetDevice@@YA_NH@Z"]
    pub fn LogiLedSetTargetDevice(targetDevice: ::std::os::raw::c_int) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSaveCurrentLighting@@YA_NXZ"]
    pub fn LogiLedSaveCurrentLighting() -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetLighting@@YA_NHHH@Z"]
    pub fn LogiLedSetLighting(
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedRestoreLighting@@YA_NXZ"]
    pub fn LogiLedRestoreLighting() -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedFlashLighting@@YA_NHHHHH@Z"]
    pub fn LogiLedFlashLighting(
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
        milliSecondsDuration: ::std::os::raw::c_int,
        milliSecondsInterval: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedPulseLighting@@YA_NHHHHH@Z"]
    pub fn LogiLedPulseLighting(
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
        milliSecondsDuration: ::std::os::raw::c_int,
        milliSecondsInterval: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedStopEffects@@YA_NXZ"]
    pub fn LogiLedStopEffects() -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetLightingFromBitmap@@YA_NQAE@Z"]
    pub fn LogiLedSetLightingFromBitmap(bitmap: *mut ::std::os::raw::c_uchar) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetLightingForKeyWithScanCode@@YA_NHHHH@Z"]
    pub fn LogiLedSetLightingForKeyWithScanCode(
        keyCode: ::std::os::raw::c_int,
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetLightingForKeyWithHidCode@@YA_NHHHH@Z"]
    pub fn LogiLedSetLightingForKeyWithHidCode(
        keyCode: ::std::os::raw::c_int,
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetLightingForKeyWithQuartzCode@@YA_NHHHH@Z"]
    pub fn LogiLedSetLightingForKeyWithQuartzCode(
        keyCode: ::std::os::raw::c_int,
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetLightingForKeyWithKeyName@@YA_NW4KeyName@LogiLed@@HHH@Z"]
    pub fn LogiLedSetLightingForKeyWithKeyName(
        keyName: LogiLed_KeyName,
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSaveLightingForKey@@YA_NW4KeyName@LogiLed@@@Z"]
    pub fn LogiLedSaveLightingForKey(keyName: LogiLed_KeyName) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedRestoreLightingForKey@@YA_NW4KeyName@LogiLed@@@Z"]
    pub fn LogiLedRestoreLightingForKey(keyName: LogiLed_KeyName) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedExcludeKeysFromBitmap@@YA_NPAW4KeyName@LogiLed@@H@Z"]
    pub fn LogiLedExcludeKeysFromBitmap(
        keyList: *mut LogiLed_KeyName,
        listCount: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedFlashSingleKey@@YA_NW4KeyName@LogiLed@@HHHHH@Z"]
    pub fn LogiLedFlashSingleKey(
        keyName: LogiLed_KeyName,
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
        msDuration: ::std::os::raw::c_int,
        msInterval: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedPulseSingleKey@@YA_NW4KeyName@LogiLed@@HHHHHHH_N@Z"]
    pub fn LogiLedPulseSingleKey(
        keyName: LogiLed_KeyName,
        startRedPercentage: ::std::os::raw::c_int,
        startGreenPercentage: ::std::os::raw::c_int,
        startBluePercentage: ::std::os::raw::c_int,
        finishRedPercentage: ::std::os::raw::c_int,
        finishGreenPercentage: ::std::os::raw::c_int,
        finishBluePercentage: ::std::os::raw::c_int,
        msDuration: ::std::os::raw::c_int,
        isInfinite: bool,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedStopEffectsOnKey@@YA_NW4KeyName@LogiLed@@@Z"]
    pub fn LogiLedStopEffectsOnKey(keyName: LogiLed_KeyName) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedSetLightingForTargetZone@@YA_NW4DeviceType@LogiLed@@HHHH@Z"]
    pub fn LogiLedSetLightingForTargetZone(
        deviceType: LogiLed_DeviceType,
        zone: ::std::os::raw::c_int,
        redPercentage: ::std::os::raw::c_int,
        greenPercentage: ::std::os::raw::c_int,
        bluePercentage: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    #[link_name = "\u{1}?LogiLedShutdown@@YAXXZ"]
    pub fn LogiLedShutdown();
}
